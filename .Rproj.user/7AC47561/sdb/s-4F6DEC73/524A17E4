{
    "contents" : "library(caret);library(kernlab)\nset.seed(32323)\n\n# Load the test file:\ndataset  <- read.csv(\"pml-training.csv\", na.strings=c(\"NA\",\"\"), strip.white=TRUE)\ndim(dataset)\n\n# Cleaning the data:\nisNA <- apply(dataset, 2, function(x) { sum(is.na(x)) })\n\ndataset <- subset(dataset[, which(isNA == 0)], \n                    select=-c(X, user_name, new_window, num_window, \n                              raw_timestamp_part_1, raw_timestamp_part_2, \n                              cvtd_timestamp))\ndim(dataset)\n\n# Spliting the dataset:\ninTrain <- createDataPartition(dataset$classe, p=0.75, list=FALSE)\ntrain_set <- dataset[inTrain,]\nvalid_set <- dataset[-inTrain,]\n\nfolds <- createFolds(y=dataset$classe,k=10,\n                     list=TRUE,returnTrain=TRUE)\nsapply(folds,length)\n\n# Test 1: Random forest classifier using cross validation contol\nctrl <- trainControl(allowParallel=TRUE, method=\"cv\", number=4)\nmodel <- train(classe ~ ., data=train_set, model=\"rf\", trControl=ctrl)\npredictor <- predict(model, newdata=valid_set)\n\n# Error on valid_set:\nsum(predictor == valid_set$classe) / length(predictor)\nconfusionMatrix(valid_set$classe, predictor)$table\n\n# Classification for test_set:\ndataset_test <- read.csv(\"pml-testing.csv\", na.strings=c(\"NA\",\"\"), strip.white=T)\ndataset_test <- subset(dataset_test[, which(isNA == 0)], \n                        select=-c(X, user_name, new_window, num_window,\n                                  raw_timestamp_part_1, raw_timestamp_part_2,\n                                  cvtd_timestamp))\n\npredict(model, newdata=dataset_test)\n\n# Test 2: SVM:\n# Most important variable for the ramdom forest predictor:\nvarImp(model)\n\n# Let us train the SVM on the dataset reduce to those ten variables\ndataset_small <- subset(dataset, \n                         select=c(roll_belt, pitch_forearm, yaw_belt,\n                                  magnet_dumbbell_y, pitch_belt, \n                                  magnet_dumbbell_z, roll_forearm,\n                                  accel_dumbbell_y, roll_dumbbell,\n                                  magnet_dumbbell_x,classe))\n\nsvm <- train(classe ~ ., data=dataset_small[inTrain,], model=\"svm\", trControl=ctrl)\n\npredictor_svm <- predict(svm, newdata=valid_set)\n\n# Error on valid_set:\nsum(predictor_svm == valid_set$classe) / length(predictor_svm)\nconfusionMatrix(valid_set$classe, predictor_svm)$table\n\n# Classification for test_set:\nresults <- predict(model, newdata=dataset_test)\n\npml_write_files = function(x){\n  n = length(x)\n  for(i in 1:n){\n    filename = paste0(\"problem_id_\",i,\".txt\")\n    write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)\n  }\n}\n\npml_write_files(results)\n  ",
    "created" : 1403420774361.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1117478375",
    "id" : "524A17E4",
    "lastKnownWriteTime" : 1403424385,
    "path" : "E:/Coursera/Practical Machine Learning/Coursera_PracticalMachineLearning/Load_data.R",
    "project_path" : "Load_data.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}